import re

# 正则表达式：能够将子表达式做成子集，使用（）进行分组，方便对字符串进行划分

## 使用场景：
### 1、对子表达式进行重复(对多个字符进行重复的话)
###：(ab){3} 表示 ab 字符重复3次

### 2、获取到子表达式匹配到的内容

## 分组的使用方法：正则中通过小括号“()”来指定需要重复的子表达式，然后再加上限定符对这个子表达式进行重复
###：例如：(abc)? 表示0个或1个abc；一组括号里面的表达式就表示一个分组

### 捕获组：捕获组和非捕获组
### 区别：捕获组表示的分组会捕获文本（即:匹配字符），而非捕获组表示的分组不会捕获文本
#### 捕获组可以通过从左到右计算其开括号来编号

### 表达式 (A)(B(C))
# 分组编号	分组编号对应的子表达式
# 0	        (A)(B(C))
# 1	        (A)
# 2	        (B(C))
# 3	        (C)

## 补充
### 如果想匹配3个数字：\d{3}
### 重复多个字符：(ab){3},3次ab

# 正则表达式分组示例 : 正则表达式分组可以从匹配的信息中提取出想要的信息
website="编程帮 www.biancheng.net"

# 提取所有信息， 转义"."
pattern_1 = re.compile('\w+\s+\w+\.\w+\.\w+')
print(pattern_1.findall(website))

# 提取匹配信息的第一项
pattern_2 = re.compile('(\w+)\s+\w+\.\w+\.\w+')
print(pattern_2.findall(website))

#有两个及以上的()则以元组形式显示
pattern_3=re.compile('(\w+)\s+(\w+\.\w+\.\w+)')
print(pattern_3.findall(website))

















